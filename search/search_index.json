{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Documenta\u00e7\u00e3o do projeto Me Adota O que \u00e9 o Me Adota? Me Adota \u00e9 um projeto MVP, open-source sem fins lucrativos que visa facilitar a ado\u00e7\u00e3o de pets, dando prioridade aos que se encontram em situa\u00e7\u00e3o vulner\u00e1vel (de rua, com problemas de sa\u00fade e etc.). Para isso, fornecemos uma plataforma livre de burocracias, onde o usu\u00e1rio consegue ter acesso a diversos an\u00fancios de pets dispon\u00edveis para ado\u00e7\u00e3o por todo o Distrito Federal (por enquanto). Adicionalmente, alguns dados relativos \u00e0 ado\u00e7\u00e3o est\u00e3o p\u00fablicos, visando a possibilidade de contribuirmos para pesquisas futuras sobre o cen\u00e1rio de vulnerabilidade de animais de estima\u00e7\u00e3o no Brasil e no mundo. Como surgiu o Me Adota? O projeto teve in\u00edcio quando a nossa equipe de desenvolvedores teve de escolher um Produto de Software espec\u00edfico para trabalhar durante a disciplina de M\u00e9todos de Desenvolvimento de Software , ministrada pelo professor George Marsicano , na Universidade de Bras\u00edlia . Durante uma reuni\u00e3o para discutir ideias sobre o que trazer para o projeto proposto pelo professor, a ideia do Me Adota surgiu e toda a equipe ficou animada com o poss\u00edvel impacto que o nosso futuro projeto (at\u00e9 ent\u00e3o) poderia alcan\u00e7ar. Nossa Equipe: A equipe de desenvolvimento que trabalhou no projeto foi batizada pelo nome Ancient Fiddle\u00b9, e contou com os membros descritos abaixo: Matr\u00edcula (UnB) Estudante GitHub 180020471 Jos\u00e9 Guilherme Fernandes Moura @joseguilhermefmoura 160124735 Iago Oliveira Monteiro Ribeiro @iagoomr 170034941 Guilherme Peixoto Lima @guipeeix7 170140571 Douglas Farias de Castro @Douglas-Castro 180018159 Guilherme Verissimo Cerveira Braz @GuilhermeBraz Informa\u00e7\u00f5es presentes nesta documenta\u00e7\u00e3o: O objetivo geral desta documenta\u00e7\u00e3o \u00e9 explicar quais foram os processos , procedimentos , m\u00e9todos e ferramentas utilizados durante o desenvolvimento do nosso Produto de Software . Baseado nos conhecimentos adquiridos durante toda a disciplina ofertada (previamente comentada). NOTAS DE RODAP\u00c9: 1 - Curiosidade: o nome Ancient Fiddle foi escolhido a partir do nome do personagem Fiddlesticks, no jogo League of Legends. Quando algum personagem \u00e9 re-criado no jogo, v\u00e1rios jogadores que jogam com o mesmo personagem h\u00e1 anos perdem parte de sua hist\u00f3ria e ganham um novo sentimento de nostalgia e saudade. Aconteceu com a equipe: dois dos membros jogavam o jogo j\u00e1 havia quase 10 anos e o personagem sempre havia sido o mesmo, mas foi um dos re-criados. \u00c9 uma homenagem, portanto.","title":"In\u00edcio"},{"location":"#documentacao-do-projeto-me-adota","text":"","title":"Documenta\u00e7\u00e3o do projeto Me Adota"},{"location":"#o-que-e-o-me-adota","text":"Me Adota \u00e9 um projeto MVP, open-source sem fins lucrativos que visa facilitar a ado\u00e7\u00e3o de pets, dando prioridade aos que se encontram em situa\u00e7\u00e3o vulner\u00e1vel (de rua, com problemas de sa\u00fade e etc.). Para isso, fornecemos uma plataforma livre de burocracias, onde o usu\u00e1rio consegue ter acesso a diversos an\u00fancios de pets dispon\u00edveis para ado\u00e7\u00e3o por todo o Distrito Federal (por enquanto). Adicionalmente, alguns dados relativos \u00e0 ado\u00e7\u00e3o est\u00e3o p\u00fablicos, visando a possibilidade de contribuirmos para pesquisas futuras sobre o cen\u00e1rio de vulnerabilidade de animais de estima\u00e7\u00e3o no Brasil e no mundo.","title":"O que \u00e9 o Me Adota?"},{"location":"#como-surgiu-o-me-adota","text":"O projeto teve in\u00edcio quando a nossa equipe de desenvolvedores teve de escolher um Produto de Software espec\u00edfico para trabalhar durante a disciplina de M\u00e9todos de Desenvolvimento de Software , ministrada pelo professor George Marsicano , na Universidade de Bras\u00edlia . Durante uma reuni\u00e3o para discutir ideias sobre o que trazer para o projeto proposto pelo professor, a ideia do Me Adota surgiu e toda a equipe ficou animada com o poss\u00edvel impacto que o nosso futuro projeto (at\u00e9 ent\u00e3o) poderia alcan\u00e7ar.","title":"Como surgiu o Me Adota?"},{"location":"#nossa-equipe","text":"A equipe de desenvolvimento que trabalhou no projeto foi batizada pelo nome Ancient Fiddle\u00b9, e contou com os membros descritos abaixo: Matr\u00edcula (UnB) Estudante GitHub 180020471 Jos\u00e9 Guilherme Fernandes Moura @joseguilhermefmoura 160124735 Iago Oliveira Monteiro Ribeiro @iagoomr 170034941 Guilherme Peixoto Lima @guipeeix7 170140571 Douglas Farias de Castro @Douglas-Castro 180018159 Guilherme Verissimo Cerveira Braz @GuilhermeBraz","title":"Nossa Equipe:"},{"location":"#informacoes-presentes-nesta-documentacao","text":"O objetivo geral desta documenta\u00e7\u00e3o \u00e9 explicar quais foram os processos , procedimentos , m\u00e9todos e ferramentas utilizados durante o desenvolvimento do nosso Produto de Software . Baseado nos conhecimentos adquiridos durante toda a disciplina ofertada (previamente comentada).","title":"Informa\u00e7\u00f5es presentes nesta documenta\u00e7\u00e3o:"},{"location":"#notas-de-rodape","text":"1 - Curiosidade: o nome Ancient Fiddle foi escolhido a partir do nome do personagem Fiddlesticks, no jogo League of Legends. Quando algum personagem \u00e9 re-criado no jogo, v\u00e1rios jogadores que jogam com o mesmo personagem h\u00e1 anos perdem parte de sua hist\u00f3ria e ganham um novo sentimento de nostalgia e saudade. Aconteceu com a equipe: dois dos membros jogavam o jogo j\u00e1 havia quase 10 anos e o personagem sempre havia sido o mesmo, mas foi um dos re-criados. \u00c9 uma homenagem, portanto.","title":"NOTAS DE RODAP\u00c9:"},{"location":"configuration/","text":"Gerenciamento de Configura\u00e7\u00e3o de Software Em cada uma das sprints foi desenvolvida uma vers\u00e3o. Elas podem ser acessadas pelos links abaixo. Historico de Vers\u00f5es V0.1 - 16/11 V0.2 - 23/10 V0.3 - 30/ 10 V0.4 - 03/12 Quadros Kanban Sprint 1 Sprint 2 Sprint 3 Sprint 4","title":"Gerenciamento de Configura\u00e7\u00e3o"},{"location":"configuration/#gerenciamento-de-configuracao-de-software","text":"Em cada uma das sprints foi desenvolvida uma vers\u00e3o. Elas podem ser acessadas pelos links abaixo.","title":"Gerenciamento de Configura\u00e7\u00e3o de Software"},{"location":"configuration/#historico-de-versoes","text":"V0.1 - 16/11 V0.2 - 23/10 V0.3 - 30/ 10 V0.4 - 03/12","title":"Historico de Vers\u00f5es"},{"location":"configuration/#quadros-kanban","text":"","title":"Quadros Kanban"},{"location":"configuration/#sprint-1","text":"","title":"Sprint 1"},{"location":"configuration/#sprint-2","text":"","title":"Sprint 2"},{"location":"configuration/#sprint-3","text":"","title":"Sprint 3"},{"location":"configuration/#sprint-4","text":"","title":"Sprint 4"},{"location":"construction/","text":"Constru\u00e7\u00e3o de Software Ao in\u00edcio da formula\u00e7\u00e3o do projeto, foi decidido pela equipe que ter\u00edamos duas sprints - dura\u00e7\u00e3o de duas semanas cada uma - por\u00e9m ao iniciar a contru\u00e7\u00e3o da nossa aplica\u00e7\u00e3o, surgiram algumas adversidades que nos fez tomar a decis\u00e3o de criar mais duas sprints, totalizando 4 sprints - dura\u00e7\u00e3o de uma semana cada uma- o que fez com que houvesse uma nova divis\u00e3o do backlog do produto e de novos objetivos por sprint. Reposit\u00f3rio Me Adota - Github Sprint 1 Nessa sprint a equipe teve alguns imprevistos, como a desist\u00eancia de um de seus membros, dessa forma foi relatado ao professor que nessa primeira sprint alguns requisitos do backlog n\u00e3o foram ser conclu\u00eddos. Entregas da Sprint: Cria\u00e7\u00e3o das classes Cria\u00e7\u00e3o do banco de dados P\u00e1gina de login P\u00e1gina inicial P\u00e1gina Sobre n\u00f3s P\u00e1gina Informa\u00e7\u00f5es Sprint 2 A sprint foi bem conduzida pelos integrantes da equipe, concluindo assim os objetivos propostos na sprint planning. Entregas da Sprint: Registro de usu\u00e1rios Login usando Facebook Verifica\u00e7\u00e3o de conta do usu\u00e1rio Log out Atualiza\u00e7\u00e3o das classes Sprint 3 Algumas mudan\u00e7as foram realizadas nos log in usando redes sociais(Google, Facebook e Twitter). Precisamos de uns dias para obter a integra\u00e7\u00e3o com o Google e com o Twitter, e a previs\u00e3o \u00e9 n\u00e3o iremos conseguir fechar essa integra\u00e7\u00e3o at\u00e9 o dia 03/12, portanto decidimos concluir esses requisitos assim for poss\u00edvel a integra\u00e7\u00e3o. Entregas da Sprint: P\u00e1gina inserir pets P\u00e1gina Meus Pets P\u00e1gina detalhes sobre o Pet P\u00e1gina perfil Atualiza\u00e7\u00e3o de Pet Formul\u00e1rio para Pet Inserir Pets Marcar pet como adotado Visualizzar pets Visualizar detalhes de pet Sprint 4 Entregas da Sprint: Atualiza\u00e7\u00e3o do email de verifica\u00e7\u00e3o Responsividade das p\u00e1ginas Filtros nas pesquisas do feed de pet Cadastro pets apenas usu\u00e1rio com cadastro completo Conserto de bugs Teste Deply","title":"Constru\u00e7\u00e3o"},{"location":"construction/#construcao-de-software","text":"Ao in\u00edcio da formula\u00e7\u00e3o do projeto, foi decidido pela equipe que ter\u00edamos duas sprints - dura\u00e7\u00e3o de duas semanas cada uma - por\u00e9m ao iniciar a contru\u00e7\u00e3o da nossa aplica\u00e7\u00e3o, surgiram algumas adversidades que nos fez tomar a decis\u00e3o de criar mais duas sprints, totalizando 4 sprints - dura\u00e7\u00e3o de uma semana cada uma- o que fez com que houvesse uma nova divis\u00e3o do backlog do produto e de novos objetivos por sprint.","title":"Constru\u00e7\u00e3o de Software"},{"location":"construction/#repositorio","text":"Me Adota - Github","title":"Reposit\u00f3rio"},{"location":"construction/#sprint-1","text":"Nessa sprint a equipe teve alguns imprevistos, como a desist\u00eancia de um de seus membros, dessa forma foi relatado ao professor que nessa primeira sprint alguns requisitos do backlog n\u00e3o foram ser conclu\u00eddos. Entregas da Sprint: Cria\u00e7\u00e3o das classes Cria\u00e7\u00e3o do banco de dados P\u00e1gina de login P\u00e1gina inicial P\u00e1gina Sobre n\u00f3s P\u00e1gina Informa\u00e7\u00f5es","title":"Sprint 1"},{"location":"construction/#sprint-2","text":"A sprint foi bem conduzida pelos integrantes da equipe, concluindo assim os objetivos propostos na sprint planning. Entregas da Sprint: Registro de usu\u00e1rios Login usando Facebook Verifica\u00e7\u00e3o de conta do usu\u00e1rio Log out Atualiza\u00e7\u00e3o das classes","title":"Sprint 2"},{"location":"construction/#sprint-3","text":"Algumas mudan\u00e7as foram realizadas nos log in usando redes sociais(Google, Facebook e Twitter). Precisamos de uns dias para obter a integra\u00e7\u00e3o com o Google e com o Twitter, e a previs\u00e3o \u00e9 n\u00e3o iremos conseguir fechar essa integra\u00e7\u00e3o at\u00e9 o dia 03/12, portanto decidimos concluir esses requisitos assim for poss\u00edvel a integra\u00e7\u00e3o. Entregas da Sprint: P\u00e1gina inserir pets P\u00e1gina Meus Pets P\u00e1gina detalhes sobre o Pet P\u00e1gina perfil Atualiza\u00e7\u00e3o de Pet Formul\u00e1rio para Pet Inserir Pets Marcar pet como adotado Visualizzar pets Visualizar detalhes de pet","title":"Sprint 3"},{"location":"construction/#sprint-4","text":"Entregas da Sprint: Atualiza\u00e7\u00e3o do email de verifica\u00e7\u00e3o Responsividade das p\u00e1ginas Filtros nas pesquisas do feed de pet Cadastro pets apenas usu\u00e1rio com cadastro completo Conserto de bugs Teste Deply","title":"Sprint 4"},{"location":"design/","text":"Design de Software As duplas respons\u00e1veis pelo backend e pelo banco de dados contruiram os diagramas e modelos que seriam usados durante o desenvolvimento da aplica\u00e7\u00e3o. Por meio dos requisitos levantados e documentados no Backlog do Produto, foram feitos o Diagrama de Classe e o Diagrama de Casos de Uso. Depois que os diagramas estavam prontos, usamos-os para modelar um banco de dados que seria coerente para o armazenamento dos dados. Modelagem Banco de Dados Modelo Entidade-Relacionamento (ME-R) Entidades USER PET Atributos USER (id_user, email, full_name, active, staff, admin, timestamp, cpf, date_of_birth, address1, address2, zip_code, city, country, phone_regex, mobile_phone, additional_info, photo) PET (id_user, image, name, description, age, size, sex, vaccinated, castrated, dewormed, vulnerable, isAdopted, pet_type, breed) Rela\u00e7\u00f5es Cardinalidade: n:1 Um USER possui n PET. Um PET pertence a um USER. Diagrama Entidade-Relacionamento (DE-R) Diagrama L\u00f3gico de Dados (DLD) Diagrama de Classe Diagrama de Casos de Uso","title":"Design"},{"location":"design/#design-de-software","text":"As duplas respons\u00e1veis pelo backend e pelo banco de dados contruiram os diagramas e modelos que seriam usados durante o desenvolvimento da aplica\u00e7\u00e3o. Por meio dos requisitos levantados e documentados no Backlog do Produto, foram feitos o Diagrama de Classe e o Diagrama de Casos de Uso. Depois que os diagramas estavam prontos, usamos-os para modelar um banco de dados que seria coerente para o armazenamento dos dados.","title":"Design de Software"},{"location":"design/#modelagem-banco-de-dados","text":"","title":"Modelagem Banco de Dados"},{"location":"design/#modelo-entidade-relacionamento-me-r","text":"","title":"Modelo Entidade-Relacionamento (ME-R)"},{"location":"design/#entidades","text":"USER PET","title":"Entidades"},{"location":"design/#atributos","text":"USER (id_user, email, full_name, active, staff, admin, timestamp, cpf, date_of_birth, address1, address2, zip_code, city, country, phone_regex, mobile_phone, additional_info, photo) PET (id_user, image, name, description, age, size, sex, vaccinated, castrated, dewormed, vulnerable, isAdopted, pet_type, breed)","title":"Atributos"},{"location":"design/#relacoes","text":"Cardinalidade: n:1 Um USER possui n PET. Um PET pertence a um USER.","title":"Rela\u00e7\u00f5es"},{"location":"design/#diagrama-entidade-relacionamento-de-r","text":"","title":"Diagrama Entidade-Relacionamento (DE-R)"},{"location":"design/#diagrama-logico-de-dados-dld","text":"","title":"Diagrama L\u00f3gico de  Dados (DLD)"},{"location":"design/#diagrama-de-classe","text":"","title":"Diagrama de Classe"},{"location":"design/#diagrama-de-casos-de-uso","text":"","title":"Diagrama de Casos de Uso"},{"location":"management/","text":"Gerenciamento de Projeto de Software Cronograma de Marco","title":"Gerenciamento de Projeto"},{"location":"management/#gerenciamento-de-projeto-de-software","text":"","title":"Gerenciamento de Projeto de Software"},{"location":"management/#cronograma-de-marco","text":"","title":"Cronograma de Marco"},{"location":"methodology/","text":"Metodologia A Escolha: Est\u00e1 claro que a escolha da utiliza\u00e7\u00e3o de metodologias \u00e1geis para o desenvolvimento de um Produto de Software, em contraste com as metodologias tradicionais, \u00e9 a op\u00e7\u00e3o predileta do mercado, j\u00e1 que facilita a realiza\u00e7\u00e3o dos processos e a concep\u00e7\u00e3o da ideia do produto at\u00e9 que este seja finalmente obtido. O modelo sequencial tradicional n\u00e3o aproxima o projeto do cliente e tamb\u00e9m o torna pouco flex\u00edvel e suscet\u00edvel a mudan\u00e7as. Durante o planejamento do nosso projeto, baseamos nossas escolhas de quais caminhos seguir no rumo da Engenharia de Software observando o mercado, as no\u00e7\u00f5es fornecidas pelos estudos guiados pelo Professor, as Conversas de Aprendizagem\u00b9 e (\u00e9 claro) a ideia que t\u00ednhamos do Software em si. Optamos por escolher uma metodologia \u00e1gil , o Scrum , pelos seguintes motivos: T\u00ednhamos em mente que muita coisa mudaria no backlog do produto, j\u00e1 que todos os membros mergulharam em tecnologias e ferramentas novas que conhec\u00edamos a pouco tempo (aumentando as chances de termos de implementar outras solu\u00e7\u00f5es para alguns problemas, as quais consumissem menos curva de aprendizado, mas, claro, seguindo ainda as ideias fundamentais concebidas para o MVP), e as possibilidades de features um site \u00e9 sempre ampla, abrindo muito espa\u00e7o para redu\u00e7\u00e3o ou inser\u00e7\u00e3o dessas features , baseado no que fosse discutido e decidido ao longo das reuni\u00f5es; Gunther Verheyen , autor dos livros \"97 Coisas que Todo Praticante de Scrum Deveria Saber\" e \"Scrum - Um Guia de Bolso\" defende que pair programming deve ser um h\u00e1bito di\u00e1rio . Realmente, fez muito sentido para nossa equipe , j\u00e1 que um de seus principais objetivos \u00e9 compartilhar conhecimento e todos os membros relataram ter experi\u00eancia e facilidade com coisas bem diferentes. Portanto, ao final do projeto, ficamos bem orgulhosos com o que produzimos, pois o produzimos verdadeiramente juntos e adquirimos bastante conhecimento; Metodologias \u00e1geis s\u00e3o perfeitas para MVPs , j\u00e1 que s\u00e3o sistemas mais simples que s\u00e3o lan\u00e7ados ao mercado para observar como ele responde. Um MVP pode at\u00e9 ter menos ou possuir funcionalidades \"placebo\", mas faz muito mais sentido do que adotar uma metodologia tradicional e gastar muito tempo para entregar um produto enorme que possivelmente n\u00e3o atendar\u00e1 ao que o usu\u00e1rio deseja.","title":"Metodologia"},{"location":"methodology/#metodologia","text":"","title":"Metodologia"},{"location":"methodology/#a-escolha","text":"Est\u00e1 claro que a escolha da utiliza\u00e7\u00e3o de metodologias \u00e1geis para o desenvolvimento de um Produto de Software, em contraste com as metodologias tradicionais, \u00e9 a op\u00e7\u00e3o predileta do mercado, j\u00e1 que facilita a realiza\u00e7\u00e3o dos processos e a concep\u00e7\u00e3o da ideia do produto at\u00e9 que este seja finalmente obtido. O modelo sequencial tradicional n\u00e3o aproxima o projeto do cliente e tamb\u00e9m o torna pouco flex\u00edvel e suscet\u00edvel a mudan\u00e7as. Durante o planejamento do nosso projeto, baseamos nossas escolhas de quais caminhos seguir no rumo da Engenharia de Software observando o mercado, as no\u00e7\u00f5es fornecidas pelos estudos guiados pelo Professor, as Conversas de Aprendizagem\u00b9 e (\u00e9 claro) a ideia que t\u00ednhamos do Software em si. Optamos por escolher uma metodologia \u00e1gil , o Scrum , pelos seguintes motivos: T\u00ednhamos em mente que muita coisa mudaria no backlog do produto, j\u00e1 que todos os membros mergulharam em tecnologias e ferramentas novas que conhec\u00edamos a pouco tempo (aumentando as chances de termos de implementar outras solu\u00e7\u00f5es para alguns problemas, as quais consumissem menos curva de aprendizado, mas, claro, seguindo ainda as ideias fundamentais concebidas para o MVP), e as possibilidades de features um site \u00e9 sempre ampla, abrindo muito espa\u00e7o para redu\u00e7\u00e3o ou inser\u00e7\u00e3o dessas features , baseado no que fosse discutido e decidido ao longo das reuni\u00f5es; Gunther Verheyen , autor dos livros \"97 Coisas que Todo Praticante de Scrum Deveria Saber\" e \"Scrum - Um Guia de Bolso\" defende que pair programming deve ser um h\u00e1bito di\u00e1rio . Realmente, fez muito sentido para nossa equipe , j\u00e1 que um de seus principais objetivos \u00e9 compartilhar conhecimento e todos os membros relataram ter experi\u00eancia e facilidade com coisas bem diferentes. Portanto, ao final do projeto, ficamos bem orgulhosos com o que produzimos, pois o produzimos verdadeiramente juntos e adquirimos bastante conhecimento; Metodologias \u00e1geis s\u00e3o perfeitas para MVPs , j\u00e1 que s\u00e3o sistemas mais simples que s\u00e3o lan\u00e7ados ao mercado para observar como ele responde. Um MVP pode at\u00e9 ter menos ou possuir funcionalidades \"placebo\", mas faz muito mais sentido do que adotar uma metodologia tradicional e gastar muito tempo para entregar um produto enorme que possivelmente n\u00e3o atendar\u00e1 ao que o usu\u00e1rio deseja.","title":"A Escolha:"},{"location":"mkdocs/","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Comandos mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -help - Print this help message. mkdocs gh-deploy - Deploy the site to the github pages. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"MkDOCS"},{"location":"mkdocs/#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"mkdocs/#comandos","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -help - Print this help message. mkdocs gh-deploy - Deploy the site to the github pages.","title":"Comandos"},{"location":"mkdocs/#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"requirements/","text":"Requisitos de Software N\u00e3o foi poss\u00edvel realizar a Observa\u00e7\u00e3o Participativa para compor o levantamento dos requisitos, portanto utilizamos as seguintes t\u00e9cnicas para esse levantamento, sem preju\u00edzos no que foi proposto: Brainstorm: Todos os membros formularam ideias ao mesmo tempo e anotaram num documento multi-sharing; Introspec\u00e7\u00e3o: As ideias do brainstorm foram analisadas individualmente e os membros marcaram em um novo documento suas opini\u00f5es e suas ideias de um \"backlog\" provis\u00f3rio; Storytelling: Ideias essas que foram organizadas seguindo um processo de contar um caminho pelo qual o usu\u00e1rio poderia seguir dentro do site, considerando as diferentes possibilidades de usu\u00e1rios. Backlog do Produto EPIC00 Register on the site US00 - User can sign up TASK - Create regular account TASK - Fix User forms US01 - User must verify their regular account TASK - Send verification email TASK - Verify regular account TASK - Update email template TASK - Update Verify Your E-mail Address template EPIC01 Login implementation US02 - User can log in TASK - Default Login EPIC02 Logout implementation US03 - User can log out EPIC03 Account maintenance US04 - User can update account TASK - Reset password TASK - Update data TASK - Navbar must show only the first name of the user TASK \u2013 Fix password reset EPIC04 Create all models US04 - User model TASK - Create user model TASK \u2013 Update User model TASK - Fix image upload bug US05 - Pets model TASK - Create Pet model TASK \u2013 Update Pet model TASK - Fix image upload bug US06 - Connection to the database EPIC05 Create all pages US07 - User can log in TASK - Create a login page or box US08 - User can see the site TASK - Create loading page gif TASK - Create a home page TASK - Create a default footer TASK - Create a default navbar TASK - Fix navbar TASK - Create pet feed TASK - Create about us page TASK - Create information page TASK - Fix index text TASK - Make all buttons and links work properly US09 - User can see account data TASK - Create insert pet page TASK - Create my pet records page TASK - Create pet details page TASK - Create personal pet page TASK - Create personal page EPIC06 Make all pages responsive to mobile devices US10 - User can log in TASK - Make a login page or box responsive US11 - User can see the site TASK - Make loading page gif responsive TASK - Make a home page responsive TASK - Make footer responsive TASK - Make navbar responsive TASK - Make pet feed responsive TASK - Make about us page responsive TASK - Make information page responsive US12 - User can see account data TASK - Make insert pet page responsive TASK - Make my pet records page responsive TASK - Make pet details page responsive TASK - Make personal pet page responsive TASK - Make personal page responsive TASK - Fix responsivity at index.html pet feed EPIC07 Register pet US13 - User can register pets TASK - Create pet form TASK - Update data pets TASK - Insert pets TASK - Mark pets as adopted TASK - User should not be able to register pet if the registration is not complete US14 - User can see a pet feed TASK - Show registered pets by the user TASK - Show pet details TASK - Show details of selected Pet TASK - Any person can search for pets TASK - Make our adoption data appear in home page TASK - requirements.txt have lots of unused packages TASK - settings.py has broken lines US15 - User can request to send message to pet owner TASK - Send message by WhatsApp Backlog Sprint 1 EPIC04 Create all models US04 - User model TASK - Create user model US05 - Pets model TASK - Create pet model US06 - Connection to the database EPIC05 Create all pages US07 - User can log in TASK - Create a login page or box US08 - User can see the site TASK - Create loading page gif TASK - Create a home page TASK - Create a default footer TASK - Create a default navbar TASK - Create about us page TASK - Create information page EPIC06 Make all pages responsive to mobile devices US10 - User can log in TASK - Make a login page or box responsive US11 - User can see the site TASK - Make loading page gif responsive TASK - Make a home page responsive TASK - Make footer responsive TASK - Make navbar responsive TASK - Make about us page responsive TASK - Make information page responsive Backlog Sprint 2 EPIC00 Register on the site US00 - User can sign up TASK - Create regular account US01 - User must verify their regular account TASK - Send verification email TASK - Verify regular account EPIC01 Login implementation US02 - User can log in TASK - Default Login EPIC02 Logout implementation US03 - User can log out EPIC03 Account maintenance US04 - User can update account TASK - Reset password EPIC04 Create all models US04 - User model TASK \u2013 Update User model TASK - Fix image upload bug US05 - Pets model TASK \u2013 Update Pet model TASK - Fix image upload bug Backlog Sprint 3 EPIC00 Register on the site US00 - User can sign up TASK - Fix User forms EPIC01 Login implementation EPIC03 Account maintenance US04 - User can update account TASK - Update data EPIC05 Create all pages US08 - User can see the site TASK - Fix navbar TASK - Create pet feed US09 - User can see account data TASK - Create insert pet page TASK - Create my pet records page TASK - Create pet details page TASK - Create personal pet page TASK - Create personal page EPIC06 Make all pages responsive to mobile devices US11 - User can see the site TASK - Make a home page responsive TASK - Make footer responsive EPIC07 Register pet US13 - User can register pets TASK - Create pet form TASK - Update data pets TASK - Insert pets TASK - Mark pets as adopted US14 - User can see a pet feed TASK - Show registered pets by the user TASK - Show pet details TASK - Show details of selected Pet TASK - Any person can search for pets TASK - requirements.txt have lots of unused packages TASK - settings.py has broken lines Backlog Sprint 4 EPIC00 Register on the site US01 - User must verify their regular account TASK - Update email template TASK - Update Verify Your E-mail Address template EPIC03 Account maintenance US04 - User can update account TASK - Navbar must show only the first name of the user TASK \u2013 Fix password reset EPIC05 Create all pages US08 - User can see the site TASK - Fix index text TASK - Make all buttons and links work properly EPIC06 Make all pages responsive to mobile devices US12 - User can see account data TASK - Make insert pet page responsive TASK - Make my pet records page responsive TASK - Make pet details page responsive TASK - Make personal pet page responsive TASK - Make personal page responsive TASK - Fix responsivity at index.html pet feed EPIC07 Register pet US13 - User can register pets TASK - User should not be able to register pet if the registration is not complete","title":"Requisitos"},{"location":"requirements/#requisitos-de-software","text":"N\u00e3o foi poss\u00edvel realizar a Observa\u00e7\u00e3o Participativa para compor o levantamento dos requisitos, portanto utilizamos as seguintes t\u00e9cnicas para esse levantamento, sem preju\u00edzos no que foi proposto: Brainstorm: Todos os membros formularam ideias ao mesmo tempo e anotaram num documento multi-sharing; Introspec\u00e7\u00e3o: As ideias do brainstorm foram analisadas individualmente e os membros marcaram em um novo documento suas opini\u00f5es e suas ideias de um \"backlog\" provis\u00f3rio; Storytelling: Ideias essas que foram organizadas seguindo um processo de contar um caminho pelo qual o usu\u00e1rio poderia seguir dentro do site, considerando as diferentes possibilidades de usu\u00e1rios.","title":"Requisitos de Software"},{"location":"requirements/#backlog-do-produto","text":"EPIC00 Register on the site US00 - User can sign up TASK - Create regular account TASK - Fix User forms US01 - User must verify their regular account TASK - Send verification email TASK - Verify regular account TASK - Update email template TASK - Update Verify Your E-mail Address template EPIC01 Login implementation US02 - User can log in TASK - Default Login EPIC02 Logout implementation US03 - User can log out EPIC03 Account maintenance US04 - User can update account TASK - Reset password TASK - Update data TASK - Navbar must show only the first name of the user TASK \u2013 Fix password reset EPIC04 Create all models US04 - User model TASK - Create user model TASK \u2013 Update User model TASK - Fix image upload bug US05 - Pets model TASK - Create Pet model TASK \u2013 Update Pet model TASK - Fix image upload bug US06 - Connection to the database EPIC05 Create all pages US07 - User can log in TASK - Create a login page or box US08 - User can see the site TASK - Create loading page gif TASK - Create a home page TASK - Create a default footer TASK - Create a default navbar TASK - Fix navbar TASK - Create pet feed TASK - Create about us page TASK - Create information page TASK - Fix index text TASK - Make all buttons and links work properly US09 - User can see account data TASK - Create insert pet page TASK - Create my pet records page TASK - Create pet details page TASK - Create personal pet page TASK - Create personal page EPIC06 Make all pages responsive to mobile devices US10 - User can log in TASK - Make a login page or box responsive US11 - User can see the site TASK - Make loading page gif responsive TASK - Make a home page responsive TASK - Make footer responsive TASK - Make navbar responsive TASK - Make pet feed responsive TASK - Make about us page responsive TASK - Make information page responsive US12 - User can see account data TASK - Make insert pet page responsive TASK - Make my pet records page responsive TASK - Make pet details page responsive TASK - Make personal pet page responsive TASK - Make personal page responsive TASK - Fix responsivity at index.html pet feed EPIC07 Register pet US13 - User can register pets TASK - Create pet form TASK - Update data pets TASK - Insert pets TASK - Mark pets as adopted TASK - User should not be able to register pet if the registration is not complete US14 - User can see a pet feed TASK - Show registered pets by the user TASK - Show pet details TASK - Show details of selected Pet TASK - Any person can search for pets TASK - Make our adoption data appear in home page TASK - requirements.txt have lots of unused packages TASK - settings.py has broken lines US15 - User can request to send message to pet owner TASK - Send message by WhatsApp","title":"Backlog do Produto"},{"location":"requirements/#backlog-sprint-1","text":"EPIC04 Create all models US04 - User model TASK - Create user model US05 - Pets model TASK - Create pet model US06 - Connection to the database EPIC05 Create all pages US07 - User can log in TASK - Create a login page or box US08 - User can see the site TASK - Create loading page gif TASK - Create a home page TASK - Create a default footer TASK - Create a default navbar TASK - Create about us page TASK - Create information page EPIC06 Make all pages responsive to mobile devices US10 - User can log in TASK - Make a login page or box responsive US11 - User can see the site TASK - Make loading page gif responsive TASK - Make a home page responsive TASK - Make footer responsive TASK - Make navbar responsive TASK - Make about us page responsive TASK - Make information page responsive","title":"Backlog Sprint 1"},{"location":"requirements/#backlog-sprint-2","text":"EPIC00 Register on the site US00 - User can sign up TASK - Create regular account US01 - User must verify their regular account TASK - Send verification email TASK - Verify regular account EPIC01 Login implementation US02 - User can log in TASK - Default Login EPIC02 Logout implementation US03 - User can log out EPIC03 Account maintenance US04 - User can update account TASK - Reset password EPIC04 Create all models US04 - User model TASK \u2013 Update User model TASK - Fix image upload bug US05 - Pets model TASK \u2013 Update Pet model TASK - Fix image upload bug","title":"Backlog Sprint 2"},{"location":"requirements/#backlog-sprint-3","text":"EPIC00 Register on the site US00 - User can sign up TASK - Fix User forms EPIC01 Login implementation EPIC03 Account maintenance US04 - User can update account TASK - Update data EPIC05 Create all pages US08 - User can see the site TASK - Fix navbar TASK - Create pet feed US09 - User can see account data TASK - Create insert pet page TASK - Create my pet records page TASK - Create pet details page TASK - Create personal pet page TASK - Create personal page EPIC06 Make all pages responsive to mobile devices US11 - User can see the site TASK - Make a home page responsive TASK - Make footer responsive EPIC07 Register pet US13 - User can register pets TASK - Create pet form TASK - Update data pets TASK - Insert pets TASK - Mark pets as adopted US14 - User can see a pet feed TASK - Show registered pets by the user TASK - Show pet details TASK - Show details of selected Pet TASK - Any person can search for pets TASK - requirements.txt have lots of unused packages TASK - settings.py has broken lines","title":"Backlog Sprint 3"},{"location":"requirements/#backlog-sprint-4","text":"EPIC00 Register on the site US01 - User must verify their regular account TASK - Update email template TASK - Update Verify Your E-mail Address template EPIC03 Account maintenance US04 - User can update account TASK - Navbar must show only the first name of the user TASK \u2013 Fix password reset EPIC05 Create all pages US08 - User can see the site TASK - Fix index text TASK - Make all buttons and links work properly EPIC06 Make all pages responsive to mobile devices US12 - User can see account data TASK - Make insert pet page responsive TASK - Make my pet records page responsive TASK - Make pet details page responsive TASK - Make personal pet page responsive TASK - Make personal page responsive TASK - Fix responsivity at index.html pet feed EPIC07 Register pet US13 - User can register pets TASK - User should not be able to register pet if the registration is not complete","title":"Backlog Sprint 4"},{"location":"testing/","text":"Teste de Software Plano de Teste Objetivos Este documento descreve o plano para testar o website Me Adota. Este documento possui os seguintes objetivos: Identificar informa\u00e7\u00f5es existentes do projeto para se testar o software Listar os resultados dos testes realizados Escopo Este Plano de Teste descreve os testes unit\u00e1rios que, por meio de teste de caixa preta, ser\u00e3o conduzidos. \u00c9 esperado que alguns requisitos funcionais relacionados aos Usu\u00e1rios e aos Pets sejam testados. As seguintes funcionalidades ser\u00e3o testadas: Registro de usu\u00e1rio Registro de pets Visualizar feed de pets Solicitar ado\u00e7\u00e3o Os seguintes requisitos n\u00e3o funcionais ser\u00e3o testados: Ao solicitar visualizar animais em ado\u00e7\u00e3o, estes devem aparecer em, no m\u00e1ximo, 2 segundos O website poder\u00e1 ser acessado nos browsers: Google Chrome, Mozilla Firefox O website ser\u00e1 desenvolvido para ambientes Windows, Android e Ubuntu Requisitos para o Teste A lista a seguir identifica os itens (requisitos funcionais, requisitos n\u00e3o funcionais) que foram identificados como alvos do teste. Essa lista representa o que ser\u00e1 testado. 3.1 Requisitos Funcionais Sign up de usu\u00e1rio Log in Log out Registrar pets Visualizar pets cadastrados Solicita\u00e7\u00e3o de ado\u00e7\u00e3o Marcar pet que j\u00e1 foram adotados 3.2 Requisitos n\u00e3o funcionais Verificar o tempo de resposta para acesso ao feed de pets Verificar disponibilidade nos browsers Google Chrome, Mozilla Firefox Verificar disponibilidade do site nos sistemas operacionais Windows, Android e Ubuntu","title":"Testes"},{"location":"testing/#teste-de-software","text":"","title":"Teste de Software"},{"location":"testing/#plano-de-teste","text":"Objetivos Este documento descreve o plano para testar o website Me Adota. Este documento possui os seguintes objetivos: Identificar informa\u00e7\u00f5es existentes do projeto para se testar o software Listar os resultados dos testes realizados Escopo Este Plano de Teste descreve os testes unit\u00e1rios que, por meio de teste de caixa preta, ser\u00e3o conduzidos. \u00c9 esperado que alguns requisitos funcionais relacionados aos Usu\u00e1rios e aos Pets sejam testados. As seguintes funcionalidades ser\u00e3o testadas: Registro de usu\u00e1rio Registro de pets Visualizar feed de pets Solicitar ado\u00e7\u00e3o Os seguintes requisitos n\u00e3o funcionais ser\u00e3o testados: Ao solicitar visualizar animais em ado\u00e7\u00e3o, estes devem aparecer em, no m\u00e1ximo, 2 segundos O website poder\u00e1 ser acessado nos browsers: Google Chrome, Mozilla Firefox O website ser\u00e1 desenvolvido para ambientes Windows, Android e Ubuntu Requisitos para o Teste A lista a seguir identifica os itens (requisitos funcionais, requisitos n\u00e3o funcionais) que foram identificados como alvos do teste. Essa lista representa o que ser\u00e1 testado. 3.1 Requisitos Funcionais Sign up de usu\u00e1rio Log in Log out Registrar pets Visualizar pets cadastrados Solicita\u00e7\u00e3o de ado\u00e7\u00e3o Marcar pet que j\u00e1 foram adotados 3.2 Requisitos n\u00e3o funcionais Verificar o tempo de resposta para acesso ao feed de pets Verificar disponibilidade nos browsers Google Chrome, Mozilla Firefox Verificar disponibilidade do site nos sistemas operacionais Windows, Android e Ubuntu","title":"Plano de Teste "},{"location":"about/about/","text":"Global Information Para o projeto Me Adota, usamos as seguintes tecnologias: 1. Python 3.8.5 2. Django 3.1.2 3. Bootstrap 4.5.3 4. PostgreSQL","title":"Informa\u00e7\u00f5es"},{"location":"about/about/#global-information","text":"Para o projeto Me Adota, usamos as seguintes tecnologias: 1. Python 3.8.5 2. Django 3.1.2 3. Bootstrap 4.5.3 4. PostgreSQL","title":"Global Information"},{"location":"about/contributing/","text":"Want to contribute? Se voc\u00ea tem interesse em contribuir com nosso projeto, acesse o CONTRIBUTING.md .","title":"Contribui\u00e7\u00e3o"},{"location":"about/contributing/#want-to-contribute","text":"Se voc\u00ea tem interesse em contribuir com nosso projeto, acesse o CONTRIBUTING.md .","title":"Want to contribute?"}]}